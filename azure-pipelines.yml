trigger:
- main

stages:
- stage: compile
  pool:
    vmImage: 'ubuntu-latest'
  jobs:
  - job: install
    steps:
    - task: UseNode@1
      inputs:
        version: '16.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
      displayName: 'npm install'

    - script: |
        npm run build
      displayName: 'npm build'

    - script: 
        npm test
      displayName: 'npm test'



    # - script: npm install -g
    # - script: sudo npm install -g


    # - script: npm run compile

    # - script: npm install --only=dev
    # - script: npm install --only=prod
    # - task: Npm@1
    #   inputs:
    #      command: 'install'

    # typescript to javascript compiler
    # - script: tsc --target ES6 --strict true --project tsconfigs/production.json






    # - task: CopyFiles@2
    #   inputs:
    #     sourceFolder: '$(Build.SourcesDirectory)'
    #     contents: |
    #       src/*
    #       public/*
    #     targetFolder: '$(Build.ArtifactStagingDirectory)'
    #   displayName: 'Copy project files'

    # - task: PublishPipelineArtifact@1
    #   inputs:
    #     artifactName: e2e-server
    #     targetPath: '$(Build.ArtifactStagingDirectory)'
    #     publishLocation: 'pipeline'
    #   displayName: 'Publish npm artifact'

    - task: CopyFiles@2
      inputs:
        Contents: 'build/**' # Pull the build directory (React)
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs: 
        PathtoPublish: $(Build.ArtifactStagingDirectory) # dist or build files
        ArtifactName: 'www' # output artifact named www

    # #upload the entire working directory of files
    # - task: PublishBuildArtifacts@1
    #   inputs:
    #     PathtoPublish: '$(System.DefaultWorkingDirectory)'

    # - task: CopyFiles@2
    #   inputs:
    #     SourceFolder: '$(System.DefaultWorkingDirectory)'
    #     Contents: |
    #       **\*.js
    #       package.json
    #     TargetFolder: '$(Build.ArtifactStagingDirectory)'

    # - task: PublishBuildArtifacts@1
    #   inputs: 
    #     PathtoPublish: $(Build.ArtifactStagingDirectory) # dist or build files
    #     ArtifactName: 'www' # output artifact named www







# - stage: package
#   pool:
#     vmImage: 'ubuntu-latest'
#   jobs:
#   - job: build
#     steps:
#     - script: npm run build
