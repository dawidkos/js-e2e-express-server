trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: installDependencies
  # pool:
  #   vmImage: 'ubuntu-latest'
  jobs:
  - job: install
    steps:
    - task: UseNode@1
      inputs:
        version: '16.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
      displayName: 'npm install'

    # - script: npm install -g
    # - script: sudo npm install -g


    # - script: npm install --only=dev
    # - script: npm install --only=prod
    # - task: Npm@1
    #   inputs:
    #      command: 'install'


- stage: package
  dependsOn: installDependencies
  # condition: succeeded('installDependencies') #it is already checked by dependsOn

  # pool:
  #   vmImage: 'ubuntu-latest'
  jobs:
  - job: build
    steps:
    - task: UseNode@1
      inputs:
        version: '16.x'
      displayName: 'Install Node.js'

    # - script: npm run compile

    # typescript to javascript compiler
    # - script: tsc --target ES6 --strict true --project tsconfigs/production.json

    # - script: npm run build

    - script: |
        npm run build
      displayName: 'npm build'

    # - script: 
    #     npm test
    #   displayName: 'npm test'



- stage: publish
  dependsOn: package
  # pool:
  #   vmImage: 'ubuntu-latest'
  jobs:
  - job: copy
    steps:

    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)'
        contents: |
          src/*
          public/*
        targetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy project files'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        publishLocation: 'pipeline'
        artifactName: e2e-server
      displayName: 'Publish npm artifact'

    - task: CopyFiles@2
      inputs:
        Contents: 'build/**' # Pull the build directory (React)
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs: 
        PathtoPublish: $(Build.ArtifactStagingDirectory) # dist or build files
        ArtifactName: 'wwwReactBuild' # output artifact named www

    # #upload the entire working directory of files
    # - task: PublishBuildArtifacts@1
    #   inputs:
    #     PathtoPublish: '$(System.DefaultWorkingDirectory)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **\*.js
          package.json
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs: 
        PathtoPublish: $(Build.ArtifactStagingDirectory) # dist or build files
        ArtifactName: 'wwwJS' # output artifact named www



